<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <!-- Spring Boot Parent -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.4.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <!-- Project -->
    <groupId>me.wirries.smartdatastore</groupId>
    <artifactId>datastore-service</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <!-- Description -->
    <name>SmartDataStoreService</name>
    <description>
        This is backend service for processing the incoming and outgoing data.
        The SmartDataStore is suitable for small IoT projects. The service
        provides an API for incoming messages from IoT devices.
        For accessing the data it provides a REST API and an OData interface.
        For managing the service an optional web front end is available.
        The project also provides an extensible plugin system for customized
        interfaces. The data is stored in the MongoDB.
    </description>

    <!-- Source Code -->
    <scm>
        <connection>scm:git:https://github.com/denisw160/SmartDataStore.git</connection>
        <developerConnection>scm:git:https://github.com/denisw160/SmartDataStore.git</developerConnection>
        <tag>HEAD</tag>
        <url>https://github.com/denisw160/SmartDataStore</url>
    </scm>

    <!-- Packaging -->
    <packaging>${packaging.type}</packaging>

    <!-- Properties -->
    <properties>
        <!-- Java Version -->
        <java.version>1.8</java.version>

        <!-- Encodings -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.build.resourcesEncoding>windows-1252</project.build.resourcesEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Eclipse Settings Helper-->
        <m2eclipse.wtp.contextRoot>/</m2eclipse.wtp.contextRoot>
    </properties>

    <!-- Build Configuration -->
    <build>
        <!-- Set artifact name -->
        <finalName>${project.artifactId}</finalName>

        <!-- Resources of the application / @xxxxx@ instead of ${xxxxx} -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <!-- Creating an Spring Boot Application -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <!-- Reporting -->
    <reporting>
        <plugins>
            <!-- Check with Findbugs -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>3.0.5</version>
                <configuration>
                    <excludeFilterFile>${basedir}/findbugs_exclude.xml</excludeFilterFile>
                </configuration>
            </plugin>
            <!-- Check with CheckStyle -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <configLocation>${basedir}/checkstyle_checks.xml</configLocation>
                </configuration>
            </plugin>
            <!-- Report of Unit-Tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>3.0.0-M4</version>
            </plugin>
            <!-- Report code coverage of Unit-Tests -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.5</version>
            </plugin>
        </plugins>
    </reporting>

    <!-- Dependencies -->
    <dependencies>
        <!-- Commons -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>

        <!-- Spring Boot Framework -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- Spring Framework -->
        <dependency>
            <groupId>org.springframework.integration</groupId>
            <artifactId>spring-integration-mqtt</artifactId>
            <version>5.2.3.RELEASE</version>
        </dependency>

        <!-- Database Driver -->

        <!-- Apache Camel framework -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-spring-boot-starter</artifactId>
            <version>2.25.0</version>
        </dependency>

        <!-- Data Mapping  -->
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-csv</artifactId>
            <version>2.10.1</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-xml</artifactId>
            <version>2.10.1</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
            <version>2.10.1</version>
        </dependency>

        <!-- API documentation with Swagger -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.9.2</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.9.2</version>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!-- Additional repository for dependencies -->
    <repositories>
        <repository>
            <id>bintray</id>
            <url>https://jcenter.bintray.com</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <!-- Build Profiles -->
    <profiles>
        <!-- Development - run standalone -->
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <packaging.type>jar</packaging.type>
            </properties>
            <dependencies>
                <!-- Use a local database -->
                <dependency>
                    <groupId>de.flapdoodle.embed</groupId>
                    <artifactId>de.flapdoodle.embed.mongo</artifactId>
                </dependency>
                <!-- Use a local mqtt broker -->
                <dependency>
                    <groupId>io.moquette</groupId>
                    <artifactId>moquette-broker</artifactId>
                    <version>0.11</version>
                </dependency>
                <!-- Add additional functions for development -->
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-devtools</artifactId>
                    <scope>runtime</scope>
                    <optional>true</optional>
                </dependency>
            </dependencies>
        </profile>

        <!-- Tomcat - run as web application in Tomcat -->
        <profile>
            <id>tomcat</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <packaging.type>war</packaging.type>
            </properties>
            <build>
                <finalName>ROOT</finalName>
            </build>
            <dependencies>
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-actuator</artifactId>
                </dependency>
            </dependencies>
        </profile>
    </profiles>

</project>
